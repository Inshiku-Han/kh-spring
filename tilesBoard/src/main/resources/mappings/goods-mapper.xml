<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 맵퍼파일 생성 후 반드시 sql-map-config.xml 파일에 mapper 등록해줘야 함 -->
<mapper namespace="goodsMapper">
	<resultMap type="com.spring.biz.vo.GoodsVO" id="goods">
		<result column="GOODS_ID" 				property="goodsId"/>
		<result column="GOODS_NAME" 			property="goodsName"/>
		<result column="CATEGORY_CODE" 			property="categoryCode"/>
		<result column="GOODS_WRITER" 			property="goodsWriter"/>
		<result column="GOODS_PRICE" 			property="goodsPrice"/>
		<result column="GOODS_POINT" 			property="goodsPoint"/>
		<result column="GOODS_DELIVERY_PRICE" 	property="goodsDeliveryPrice"/>
		<result column="GOODS_PUBLISHER" 		property="goodsPublisher"/>
		<result column="GOODS_PUBLISHER_DATE" 	property="goodsPublisherDate"/>
		<result column="GOODS_STATUS" 			property="goodsStatus"/>
		<result column="GOODS_CONTENT" 			property="goodsContent"/>
		<result column="GOODS_CREATE_DATE" 		property="goodsCreateDate"/>
		<result column="FILE_NAME" 				property="fileName"/>
	</resultMap>

	<resultMap type="com.spring.biz.vo.CategoryVO" id="category">
		<result column="CATEGORY_CODE" 	property="categoryCode"/>
		<result column="CATEGORY_NAME" 	property="categoryName"/>
	</resultMap>
	
	<resultMap type="com.spring.biz.vo.ImageVO" id="image">
		<result column="IMAGE_ID" 		property="imageId"/>
		<result column="GOODS_ID" 		property="goodsId"/>
		<result column="FILE_NAME" 		property="fileName"/>
		<result column="MEMBER_ID" 		property="memberId"/>
		<result column="CREATE_DATE" 	property="createDate"/>
	</resultMap>
	
	<resultMap type="com.spring.biz.vo.BuyVO" id="buy">
		<result column="ORDER_NUM" 			property="orderNum"/>
		<result column="ORDER_ID" 			property="orderId"/>
		<result column="MEMBER_ID" 			property="memberId"/>
		<result column="MEMBER_NAME" 		property="memberName"/>
		<result column="GOODS_ID" 			property="goodsId"/>
		<result column="GOODS_NAME" 		property="goodsName"/>
		<result column="ORDER_GOODS_CNT" 	property="orderGoodsCnt"/>
		<result column="ORDER_PRICE" 		property="orderPrice"/>
		<result column="MEMBER_TEL1" 		property="memberTel1"/>
		<result column="MEMBER_TEL2" 		property="memberTel2"/>
		<result column="MEMBER_ADDR" 		property="memberAddr"/>
		<result column="BUY_DATE" 			property="buyDate"/>
		<result column="IS_CONFIRM" 		property="isConfirm"/>
	</resultMap>
	
	<resultMap type="com.spring.biz.vo.CartVO" id="cart">
		<result column="CART_ID	"		property="cartId"/>
		<result column="GOODS_ID"		property="goodsId"/>
		<result column="MEMBER_ID"		property="memberId"/>
		<result column="CREATE_DATE"	property="createDate"/>
		<result column="GOODS_CNT" 		property="goodsCnt"/>
		<result column="IS_DELETE" 		property="isDelete"/>
	</resultMap>
	
	<resultMap type="com.spring.biz.vo.CartListVO" id="cartList">
		<result column="CART_ID"		property="cartId"/>
		<result column="FILE_NAME"		property="fileName"/>
		<result column="GOODS_NAME"		property="goodsName"/>
		<result column="MEMBER_ID"		property="memberId"/>
		<result column="MEMBER_NAME"	property="memberName"/>
		<result column="CREATE_DATE" 	property="createDate"/>
		<result column="GOODS_PRICE" 	property="goodsPrice"/>
		<result column="GOODS_CNT" 		property="goodsCnt"/>
		<result column="TOTAL_PRICE" 	property="totalPrice"/>
	</resultMap>

	<select id="selectCategoryList" resultMap="category">
		SELECT CATEGORY_CODE
			, CATEGORY_NAME
		FROM SHOPPING_GOODS_CATEGORY
		ORDER BY CATEGORY_CODE
	</select>
	
	<select id="getMaxId" resultType="int">
		SELECT NVL(MAX(GOODS_ID) + 1, 1) 
		FROM SHOPPING_GOODS
	</select>
	
	<insert id="insertGoods">
		INSERT INTO SHOPPING_GOODS (
			GOODS_ID
			, GOODS_NAME
			, CATEGORY_CODE
			, GOODS_WRITER
			, GOODS_PRICE
			, GOODS_POINT
			, GOODS_DELIVERY_PRICE
			, GOODS_CONTENT
		) VALUES (
			#{goodsId}
			, #{goodsName}
			, #{categoryCode}
			, #{goodsWriter}
			, #{goodsPrice}
			, #{goodsPrice} * 0.1
			, #{goodsDeliveryPrice}
			, #{goodsContent}
		)
	</insert>
	
	<insert id="insertImage">
		INSERT ALL
		<foreach collection="imageList" item="image">
			INTO SHOPPING_IMAGE (
				IMAGE_ID
				, GOODS_ID
				, FILE_NAME
				, MEMBER_ID
			) VALUES (
				#{image.imageId}
			 	, #{image.goodsId}
			 	, #{image.fileName}
			 	, #{image.memberId}
			)
		</foreach>
		SELECT * FROM DUAL
	</insert>
	
	<select id="selectGoodsList" resultMap="goods">
		SELECT G.GOODS_ID
			, GOODS_NAME
			, GOODS_PRICE
			, FILE_NAME
		FROM SHOPPING_GOODS G, SHOPPING_IMAGE I
		WHERE G.GOODS_ID = I.GOODS_ID
		AND IMAGE_ID LIKE '%'||'1'
		<if test="categoryCode != 0">
		AND CATEGORY_CODE = #{categoryCode}
		</if>
	</select>
	
	<select id="selectGoods" resultMap="goods">
		SELECT G.GOODS_ID
		    , GOODS_NAME
		    , GOODS_PRICE
		    , GOODS_DELIVERY_PRICE
		    , GOODS_CONTENT
		    , FILE_NAME
		    , GOODS_POINT
		FROM SHOPPING_GOODS G, SHOPPING_IMAGE I
		WHERE G.GOODS_ID = I.GOODS_ID
		AND IMAGE_ID LIKE '%'||'1'
		AND G.GOODS_ID = #{goodsId}
	</select>
	
	<select id="selectGoodsImages" resultMap="image">
		SELECT FILE_NAME 
		FROM SHOPPING_IMAGE
		WHERE GOODS_ID = #{goodsId}
		AND IMAGE_ID NOT LIKE '%'||'1'
	</select>

	<insert id="insertBuy">
		INSERT INTO SHOPPING_BUY(
			ORDER_NUM
			, ORDER_ID
			, MEMBER_ID
			, MEMBER_NAME
			, GOODS_ID
			, GOODS_NAME
			, ORDER_GOODS_CNT
			, ORDER_PRICE
			, MEMBER_TEL1
			, MEMBER_TEL2
			, MEMBER_ADDR
		) VALUES (
			(SELECT NVL(MAX(ORDER_NUM)+1,1) FROM SHOPPING_BUY)
			, TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')||'_'||#{memberId}
			, #{memberId}
			, #{memberName}
			, #{goodsId}
			, #{goodsName}
			, #{orderGoodsCnt}
			, #{orderPrice}
			, #{memberTel1}
			, #{memberTel2}
			, #{memberAddr}
		)
	</insert>
	
	<select id="selectBuyList" resultMap="buy">
		SELECT 
			ORDER_NUM
			, ORDER_ID
			, MEMBER_ID
			, GOODS_NAME
			, ORDER_PRICE
			, BUY_DATE
			, IS_CONFIRM
		FROM SHOPPING_BUY
		WHERE TO_CHAR(BUY_DATE, 'YYYY-MM-DD') &lt;= #{toDate}
		AND TO_CHAR(BUY_DATE, 'YYYY-MM-DD') &gt;= #{fromDate}
		<if test="searchValue != null and searchValue != ''">
			AND UPPER(${searchKeyword}) LIKE '%'||UPPER(#{searchValue})||'%'
		</if>
		<if test='isConfirm == "Y"'>
			AND IS_CONFIRM = 'Y'
		</if>
		
		ORDER BY BUY_DATE DESC
	</select>
	
	<update id="updateIsConfirm">
		UPDATE SHOPPING_BUY
		SET IS_CONFIRM = 'Y'
		WHERE ORDER_NUM = #{orderNum}
	</update>
	
	
	<insert id="insertCart">
		MERGE INTO SHOPPING_CART
	    USING DUAL
	    ON (GOODS_ID = #{goodsId} AND MEMBER_ID = #{memberId})
	    WHEN MATCHED THEN
	         UPDATE
	         SET
	         GOODS_CNT = GOODS_CNT + #{goodsCnt}
	    WHEN NOT MATCHED THEN
	         INSERT (
	            CART_ID
				, GOODS_ID
				, MEMBER_ID
				, GOODS_CNT
	         ) VALUES (
	           'CART'||TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
				, #{goodsId}
				, #{memberId}
				, #{goodsCnt}
	         )
	</insert>
	
	<select id="selectCartList" resultMap="cartList">
		SELECT C.CART_ID 
			, I.FILE_NAME
		    , G.GOODS_NAME
		    , M.MEMBER_ID
		    , M.MEMBER_NAME
		    , TO_CHAR(C.CREATE_DATE, 'YYYY-MM-DD') AS CREATE_DATE
		    , G.GOODS_PRICE
		    , C.GOODS_CNT
		    , (G.GOODS_PRICE * C.GOODS_CNT) AS TOTAL_PRICE
		FROM SHOPPING_CART C, SHOPPING_IMAGE I, SHOPPING_GOODS G, SHOPPING_MEMBER M
		WHERE C.GOODS_ID = I.GOODS_ID
		AND C.GOODS_ID = G.GOODS_ID
		AND C.MEMBER_ID = M.MEMBER_ID
		AND IMAGE_ID LIKE '%'||'1'
		AND C.MEMBER_ID = #{memberId}
		AND C.IS_DELETE = 'N'
	</select>
	
	<delete id="deleteCart">
		DELETE SHOPPING_CART
		WHERE CART_ID IN
		<foreach collection="array" item="cartId" open="(" close=")" separator=", " >
			#{cartId}
		</foreach>
		
	</delete>
	
</mapper>













